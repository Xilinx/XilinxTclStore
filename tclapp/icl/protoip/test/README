icl/protoip/test description

## test\_fix\_0001.tcl

The goal of this test is to validate and build an IP prototype named "my\_project1" starting from the template project using **fixed-point arithmetic** targeting a **zedboard**.

### Template specification:

*Name			| Direction		| Number of data 			| Data representation*

x0			 	| Input         | X0\_IN\_LENGTH=3 			|data type "data\_t\_x0\_in" is fixed-point: X0\_IN\_INTEGERLENGTH=10  bits integer length, X0\_IN\_FRACTIONLENGTH=6  bits fraction length

x1			 	| Input         | X1\_IN\_LENGTH=7 			|data type "data\_t\_x1\_in" is fixed-point: X1\_IN\_INTEGERLENGTH=10  bits integer length, X1\_IN\_FRACTIONLENGTH=6  bits fraction length

y0			 	| Output        | Y0\_OUT\_LENGTH=4 			|data type "data\_t\_y0\_in" is fixed-point: Y0\_OUT\_INTEGERLENGTH=10  bits integer length, Y0\_OUT\_FRACTIONLENGTH=6  bits fraction length


FPGA circuit clock frequency:* 	150 MHz

*FPGA name:*						xc7z020clg484-1

*Evaluation Broad name:*			zedboard

*Algorithm:*

y0[0]=x0[0]+x0[1]+x0[2]+x1[0]+x1[1]+x1[2]+x1[3]+x1[4]+x1[5]+x1[6];
y0[1]=x0[0]+x0[1]+x0[2]+x1[0]+x1[1]+x1[2]+x1[3]+x1[4]+x1[5]+x1[6];
y0[2]=x0[0]+x0[1]+x0[2]+x1[0]+x1[1]+x1[2]+x1[3]+x1[4]+x1[5]+x1[6];
y0[3]=x0[0]+x0[1]+x0[2]+x1[0]+x1[1]+x1[2]+x1[3]+x1[4]+x1[5]+x1[6];


### The following TCL scripts will be called: 
 
- create a new IP project template named "my\_project0"

		tclapp::icl::protoip::make_template -project_name my_project0 -input x0:3:fix:10:6 -input x1:7:fix:10:6 -output y0:4:fix:10:6
- copy "my\_project0" into "my\_project1" 

		tclapp::icl::protoip::ip_design_duplicate -from my_project0 -to my_project1
- delete "my\_project0"

		tclapp::icl::protoip::ip_design_delete -project_name my_project0

- run a C simulation of the IP project template named "m\y_project1" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project1 -num_test 1 -type_test c 
- run a RTL simulation of the IP project  template named "my\_project1" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project1 -num_test 1 -type_test xsim 
- built the IP XACT of the IP project template using Vivado HLS

		tclapp::icl::protoip::ip_design_build -project_name my_project1  -fclk 150 
- build the IP prototype using Vivado and targeting a Zedboaerd

		tclapp::icl::protoip::ip_prototype_build -project_name my_project1
	
### Returns the following files in icl/protoip/test/test\_fix\_0001:

- ip\_configuration\_parameters.txt
- ip\_design.txt (Vivado HLS report. It is generated only after having successfully generated the IP-XACT)
- ip\_prototype.txt (Vivado report. It is generated only after having successfully generated the bitstream)
- test\_CRTL/*dat (C and RTL simulation results)


## test\_fix\_0002.tcl

The goal of this test is to validate and build an IP prototype named "my_project2" starting from the template project using **fixed-point arithmetic** targeting a **microzedboard**.

### Template specification:

*Name			| Direction		| Number of data 			| Data representation*

x0			 	| Input         | X0\_IN\_LENGTH=2 			|data type "data\_t\_x0\_in" is fixed-point: X0\_IN\_INTEGERLENGTH=5  bits integer length, X0\_IN\_FRACTIONLENGTH=5  bits fraction length

x1			 	| Input         | X1\_IN\_LENGTH=1 			|data type "data\_t\_x1\_in" is fixed-point: X1\_IN\_INTEGERLENGTH=5  bits integer length, X1\_IN\_FRACTIONLENGTH=5  bits fraction length

y0			 	| Output         | Y0\_OUT\_LENGTH=2 			|data type "data\_t\_y0\_in" is fixed-point: Y0\_OUT\_INTEGERLENGTH=4  bits integer length, Y0\_OUT\_FRACTIONLENGTH=6  bits fraction length


FPGA circuit clock frequency:* 	100 MHz

*FPGA name:*						xc7z020clg400-1

*Evaluation Broad name:*			microzedboard

*Algorithm:*

y0[0]=x0[0]+x0[1]+x1[0];
y0[1]=x0[0]+x0[1]+x1[0];



### The following TCL scripts will be called: 
 

- copy "my\_project1" into "my\_project2" 

		tclapp::icl::protoip::ip_design_duplicate -from my_project1 -to my_project2

- run a C simulation of the IP project template named "my\_project2" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project2 -num_test 1 -type_test c  -input x0:2:fix:5:5 -input x1:1:fix:5:5 -output y0:2:fix:4:6 
- run a RTL simulation of the IP project  template named "my\_project2" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project2 -num_test 1 -type_test xsim  
- built the IP XACT of the IP project template using Vivado HLS

		tclapp::icl::protoip::ip_design_build -project_name my_project2  -fclk 100 -FPGA_name xc7z020clg400-1
- build the IP prototype using Vivado and targeting a Zedboaerd

		tclapp::icl::protoip::ip_prototype_build -project_name my_project2 -board_name microzedboard
	
### Returns the following files in icl/protoip/test/test\_fix\_0002:

- ip\_configuration\_parameters.txt
- ip\_design.txt (Vivado HLS report. It is generated only after having successfully generated the IP-XACT)
- ip\_prototype.txt (Vivado report. It is generated only after having successfully generated the bitstream)
- test\_CRTL/*dat (C and RTL simulation results)


## test\_fix\_0003.tcl

The goal of this test is to validate and build an IP prototype named "my_project3" starting from the template project using **fixed-point arithmetic** targeting a **zc702**.

### Template specification:

*Name			| Direction		| Number of data 			| Data representation*

x0			 	| Input         | X0\_IN\_LENGTH=2 			|data type "data\_t\_x0\_in" is fixed-point: X0\_IN\_INTEGERLENGTH=5  bits integer length, X0\_IN\_FRACTIONLENGTH=8  bits fraction length

x1			 	| Input         | X1\_IN\_LENGTH=1 			|data type "data\_t\_x1\_in" is fixed-point: X1\_IN\_INTEGERLENGTH=5  bits integer length, X1\_IN\_FRACTIONLENGTH=7  bits fraction length

y0			 	| Output         | Y0\_OUT\_LENGTH=3 			|data type "data\_t\_y0\_in" is fixed-point: Y0\_OU\T_INTEGERLENGTH=10  bits integer length, Y0\_OUT\_FRACTIONLENGTH=6  bits fraction length


FPGA circuit clock frequency:* 	100 MHz

*FPGA name:*						xc7z020clg484-1

*Evaluation Broad name:*			zc702

*Algorithm:*

y0[0]=x0[0]+x0[1]+x1[0];
y0[1]=x0[0]+x0[1]+x1[0];
y0[2]=x0[0]+x0[1]+x1[0];



### The following TCL scripts will be called: 
 

- copy "my\_project2" into "my\_project3" 

		tclapp::icl::protoip::ip_design_duplicate -from my_project2 -to my_project3 

- run a C simulation of the IP project template named "my\_project3" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project3 -num_test 1 -type_test c  -input x0:2:fix:5:8 -input x1:1:fix:5:7 -output y0:3:fix:10:6 
- run a RTL simulation of the IP project  template named "my\_project3" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project3 -num_test 1 -type_test xsim  
- built the IP XACT of the IP project template using Vivado HLS

		tclapp::icl::protoip::ip_design_build -project_name my_project3  -fclk 100 -FPGA_name xc7z020clg484-1
- build the IP prototype using Vivado and targeting a zc702

		tclapp::icl::protoip::ip_prototype_build -project_name my_project3 -board_name zc702
	
### Returns the following files in icl/protoip/test/test\_fix\_0003:

- ip\_configuration\_parameters.txt
- ip\_design.txt (Vivado HLS report. It is generated only after having successfully generated the IP-XACT)
- ip\_prototype.txt (Vivado report. It is generated only after having successfully generated the bitstream)
- test\_CRTL/*dat (C and RTL simulation results)



## test\_fix\_0004.tcl

The goal of this test is to validate and build an IP prototype named "my_project4" starting from the template project using **fixed-point arithmetic** targeting a **zc706**.

### Template specification:

*Name			| Direction		| Number of data 			| Data representation*

x0			 	| Input         | X0\_IN\_LENGTH=3 			|data type "data\_t\_x0\_in" is fixed-point: X0\_IN\_INTEGERLENGTH=10  bits integer length, X0\_IN\_FRACTIONLENGTH=2  bits fraction length

x1			 	| Input         | X1\_IN\_LENGTH=1 			|data type "data\_t\_x1\_in" is fixed-point: X1\_IN\_INTEGERLENGTH=5  bits integer length, X1\_IN\_FRACTIONLENGTH=5  bits fraction length

y0			 	| Output         | Y0\_OUT\_LENGTH=2 			|data type "data\_t\_y0\_in" is fixed-point: Y0\_OUT\_INTEGERLENGTH=4  bits integer length, Y0\_OUT\_FRACTIONLENGTH=6  bits fraction length



FPGA circuit clock frequency:* 	100 MHz

*FPGA name:*						xc7z045ffg900-2

*Evaluation Broad name:*			zc706

*Algorithm:*

y0[0]=x0[0]+x0[1]+x0[2]+x1[2];
y0[1]=x0[0]+x0[1]+x0[2]+x1[2];



### The following TCL scripts will be called: 
 

- copy "my\_project3" into "my\_project4" 

		tclapp::icl::protoip::ip_design_duplicate -from my_project3 -to my_project4  

- run a C simulation of the IP project template named "my\_project4" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project4 -num_test 1 -type_test c  -input x0:3:fix:10:2 -input x1:1:fix:5:5 -output y0:2:fix:4:6 
- run a RTL simulation of the IP project  template named "my\_project4" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project4 -num_test 1 -type_test xsim  
- built the IP XACT of the IP project template using Vivado HLS

		tclapp::icl::protoip::ip_design_build -project_name my_project4  -fclk 100 -FPGA_name xc7z045ffg900-2
- build the IP prototype using Vivado and targeting a zc702

		tclapp::icl::protoip::ip_prototype_build -project_name my_project4 -board_name zc706
	
### Returns the following files in icl/protoip/test/test\_fix\_0004:

- ip\_configuration\_parameters.txt
- ip\_design.txt (Vivado HLS report. It is generated only after having successfully generated the IP-XACT)
- ip\_prototype.txt (Vivado report. It is generated only after having successfully generated the bitstream)
- test\_CRTL/*dat (C and RTL simulation results)



## test\_float\_0001.tcl

The goal of this test is to validate and build an IP prototype named "my_project0" starting from the template project using **floating-point arithmetic** targeting a **zedboard**.

### Template specification:

*Name			| Direction		| Number of data 			| Data representation*

x0			 	| Input         | X0\_IN\_LENGTH=1 			|data type "data\_t\_x0_\in" is floating-point single precision (32 bits)

x1			 	| Input         | X1\_IN\_LENGTH=2 			|data type "data\_t\_x1\_in" is floating-point single precision (32 bits)

y0			 	| Output         | Y0\_OUT\_LENGTH=4 			|data type "data\_t\_y0\_in" is floating-point single precision (32 bits)




FPGA circuit clock frequency:* 	100 MHz

*FPGA name:*						xc7z045ffg900-2

*Evaluation Broad name:*			zc706

*Algorithm:*

y0[0]=x0[0]+x1[0]+x1[1];
y0[1]=x0[0]+x1[0]+x1[1];
y0[2]=x0[0]+x1[0]+x1[1];
y0[3]=x0[0]+x1[0]+x1[1];



### The following TCL scripts will be called: 
 

- copy "my\_project1" into "my\_project0" 

		tclapp::icl::protoip::ip_design_duplicate -from my_project1 -to my_project0  

- run a C simulation of the IP project template named "my\_project0" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project0 -num_test 2 -type_test c  -input x0:1:float -input x1:2:float -output y0:4:float
- run a RTL simulation of the IP project  template named "my\_project0" using Vivado HLS and Matlab to generate the stimuli and check the results

		tclapp::icl::protoip::ip_design_test -project_name my_project0 -num_test 1 -type_test xsim  
- built the IP XACT of the IP project template using Vivado HLS

		tclapp::icl::protoip::ip_design_build -project_name my_project0 -FPGA_name xc7z020clg484-1
- build the IP prototype using Vivado and targeting a zc702

		tclapp::icl::protoip::ip_prototype_build -project_name my_project0 -board_name zedboard
	
### Returns the following files in icl/protoip/test/test\_float\_0000:

- ip\_configuration\_parameters.txt
- ip\_design.txt (Vivado HLS report. It is generated only after having successfully generated the IP-XACT)
- ip\_prototype.txt (Vivado report. It is generated only after having successfully generated the bitstream)
- test\_CRTL/*dat (C and RTL simulation results)
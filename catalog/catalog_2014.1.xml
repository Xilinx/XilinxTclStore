<?xml version="1.0" encoding="utf-8"?>
<catalog>
  <release>2014.2</release>
  <apps>
    <app>
      <revision>1.0</revision>
      <revision_history>Modified README; package requirement is Vivado 2013.1; updated commit id</revision_history>
      <commit_id>bd3e4d0ac0e424463341c39766b44d4e25ba36d8</commit_id>
      <name>designutils</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <author>Multiple people</author>
      <company>xilinx</company>
      <summary>This directory is a collection of random scripts and utilties in no particular organization.</summary>
      <procs>
        <proc>
          <name>bisect_pblock</name>
          <summary>bisect a P block</summary>
        </proc>
        <proc>
          <name>check_cdc_paths</name>
          <summary>checks all the CDC paths for typical issues</summary>
        </proc>
        <proc>
          <name>clone_cell</name>
          <summary>Clone a cell and connects all the clone input pins to the master input pins. Run after synthesis</summary>
        </proc>
        <proc>
          <name>clone_net_driver</name>
          <summary>Clone the driver cell of a net. Run after synthesis</summary>
        </proc>
        <proc>
          <name>create_diff_ports</name>
          <summary>Creates differential _N port for each _P port in a pinplanning design</summary>
        </proc>
        <proc>
          <name>generate_runs</name>
          <summary>Create all possible combinations of runs</summary>
        </proc>
        <proc>
          <name>get_clock_interaction</name>
          <summary>Return a specific string within the clock interaction report</summary>
        </proc>
        <proc>
          <name>get_connected_ref_pins</name>
          <summary>Return a list of reference pins connected to the pin</summary>
        </proc>
        <proc>
          <name>get_data_through_pins</name>
          <summary>Return the data pins of a single timing path</summary>
        </proc>
        <proc>
          <name>get_host_platform</name>
          <summary>return the host platform (windows|unix)</summary>
        </proc>
        <proc>
          <name>get_inter_slr_nets</name>
          <summary>get all the inter-SLR nets</summary>
        </proc>
        <proc>
          <name>get_leaf_cells</name>
          <summary>get all the leave cells below an instance</summary>
        </proc>
        <proc>
          <name>get_mem</name>
          <summary>queries the kernel for current heap memory of Vivado session</summary>
        </proc>
        <proc>
          <name>get_pid_mem</name>
          <summary>queries the kernel for the heap memory of a specific process</summary>
        </proc>
        <proc>
          <name>get_sll_nets</name>
          <summary>get routed inter-SLR nets that have a VLONG12 cost and over 100 wire shapes on at least one of its nodes</summary>
        </proc>
        <proc>
          <name>get_sll_nodes</name>
          <summary>returns all the sll node objects in the device for matching SLRs</summary>
        </proc>
        <proc>
          <name>gets_regexp</name>
          <summary>returns the next line that matches occurrence of regular expression in the file</summary>
        </proc>
        <proc>
          <name>highlight_enable_signal_sites</name>
          <summary>highlight the destination sites of the enable signals reported by report_control_set command</summary>
        </proc>
        <proc>
          <name>insert_buffer_chain</name>
          <summary>insert a list of buffers or any 2-pins cells on a net</summary>
        </proc>
        <proc>
          <name>is_fabric_connected</name>
          <summary>Determine if the given pin is connected to a SLICE. For input pins, check just the driver. For output pins, check all loads</summary>
        </proc>
        <proc>
          <name>prettyTable</name>
          <summary>utility to easily create and print tables</summary>
        </proc>
        <proc>
          <name>read_file_regexp</name>
          <summary>returns all lines that match occurrence of regular expression in the file</summary>
        </proc>
        <proc>
          <name>reapply_iostandard</name>
          <summary>this command queries the tool-chosen defaults from implementation and &quot;apply&quot; them so it looks like the user did it from the beginning. This complies with the bit export restriction that all ios be LOCd and explicitly set to an IO Standard</summary>
        </proc>
        <proc>
          <name>replicate_high_fanout_registers</name>
          <summary>Replicate registers to limit register fanout to maxFan.  Run after synthesis</summary>
        </proc>
        <proc>
          <name>report_cells_fanout</name>
          <summary>report the fanout of cells matching a REF_NAME pattern</summary>
        </proc>
        <proc>
          <name>report_cells_loc</name>
          <summary>report the location of cells matching a REF_NAME pattern</summary>
        </proc>
        <proc>
          <name>report_critical_hfn</name>
          <summary>report timing critical high fanout nets based on fanout and slack</summary>
        </proc>
        <proc>
          <name>report_hier_util</name>
          <summary>report the cell utilization below hierarchical instances</summary>
        </proc>
        <proc>
          <name>report_parts</name>
          <summary>report all the available parts that match a pattern</summary>
        </proc>
        <proc>
          <name>source_path</name>
          <summary>source a script from a choice of paths</summary>
        </proc>
        <proc>
          <name>verilog2int</name>
          <summary>Convert a Verilog formatted number to an integer</summary>
        </proc>
        <proc>
          <name>write_slr_pblock_xdc</name>
          <summary>Exports the current SLR placement to pblock constraints in an XDC file</summary>
        </proc>
        <proc>
          <name>write_template</name>
          <summary>generates a Verilog/VHDL stub, instanciation template or testbench for the current design in memory (current_instance)</summary>
        </proc>
      </procs>
    </app>
    <app>
      <revision>1.2</revision>
      <commit_id>bd3e4d0ac0e424463341c39766b44d4e25ba36d8</commit_id>
      <name>diff</name>
      <author>Nik Cimino</author>
      <company>xilinx</company>
      <summary>Vivado Design Differencing</summary>
      <procs>
        <proc>
          <name>delete</name>
          <summary>Wrapper around stooop::delete to delete stooop managed object</summary>
        </proc>
        <proc>
          <name>diff_close_designs</name>
          <summary>This helper command is used to report the sequential line differences between all of the properties of the objects returned from a specific command on each design.</summary>
        </proc>
        <proc>
          <name>diff_lists</name>
          <summary>This helper command is used to report the non-sequential differences between the lists produced when executing a specific command on each design. In other words, if we ran get_cells on two designs and this is what was returned: design_1: a c d, design_2: c d a. Then diff_lists would say that the lists are equivalent. The diff_lists command *does not care about order*.</summary>
        </proc>
        <proc>
          <name>diff_props</name>
          <summary>This helper command is used to report the sequential line differences between the reports produced when executing a specific command on each design.</summary>
        </proc>
        <proc>
          <name>diff_reports</name>
          <summary>This helper command is used to report the sequential line differences between the reports produced when executing a specific command on each design. In other words, if we ran report_clocks -return_string on two designs and this is what was returned: design_1: a b c, design_2: b c a. This helper command is used to report the sequential line differences between all of the properties of the objects returned from a specific command on each design.</summary>
        </proc>
        <proc>
          <name>double_exec</name>
          <summary>This helper command is used to execute any tcl command on both designs.</summary>
        </proc>
        <proc>
          <name>new_diff</name>
          <summary>This helper command is used to create a new diff object. This is the object that difference methods can be called on and differences can be reported.</summary>
        </proc>
        <proc>
          <name>new_report</name>
          <summary>This helper command is used to create a new report object.</summary>
        </proc>
      </procs>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>68bbc30ff320f71cac4751187d36495b7ba7c6d7</commit_id>
      <name>ies</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <company>xilinx</company>
      <summary>Simulation script to verify design using IES Simulator</summary>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>68bbc30ff320f71cac4751187d36495b7ba7c6d7</commit_id>
      <name>modelsim</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <company>xilinx</company>
      <summary>Simulation script to verify design using ModelSim/Questa Simulator</summary>
    </app>
    <app>
      <commit_id>92d6612ff16552036be4ed04cb13fcaf842838c0</commit_id>
      <name>myapp</name>
      <company>mycompany</company>
      <summary>example myapp</summary>
      <procs>
        <proc>
          <name>myproc1</name>
        </proc>
        <proc>
          <name>myproc2</name>
        </proc>
        <proc>
          <name>myproc3</name>
        </proc>
      </procs>
    </app>
    <app>
      <revision>2.0</revision>
      <commit_id>bd3e4d0ac0e424463341c39766b44d4e25ba36d8</commit_id>
      <name>projutils</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <author>Raj Klair</author>
      <company>xilinx</company>
      <summary>This script can be used to write a Tcl script for re-building the current project from the Vivado Tcl shell</summary>
      <procs>
        <proc>
          <name>export_simulation</name>
          <summary>Generate design filelist for the specified simulator for standalone simulation</summary>
        </proc>
        <proc>
          <name>write_project_tcl</name>
          <summary>Export Tcl script for re-creating the current project</summary>
        </proc>
      </procs>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>bd3e4d0ac0e424463341c39766b44d4e25ba36d8</commit_id>
      <name>tk_tunnel</name>
      <author>Nik Cimino</author>
      <company>xilinx</company>
      <summary>This app can be used to launch a Tcl/Tk 8.5 server using a standalone Tcl shell, and pass commands from Vivado to the Tk shell.</summary>
      <procs>
        <proc>
          <name>accept_connection</name>
          <summary>This proc is the callback function when the server receives a connection request</summary>
        </proc>
        <proc>
          <name>ask</name>
        </proc>
        <proc>
          <name>broadcast</name>
          <summary>This command broadcasts a command / response to all clients from the server</summary>
        </proc>
        <proc>
          <name>connect_to_server</name>
          <summary>This proc is called to connect a client to a server, it will wait until it is connected</summary>
        </proc>
        <proc>
          <name>exec_push_return</name>
          <summary>Executes a command locally and broadcasts the return to the client (called by rexec_wait)</summary>
        </proc>
        <proc>
          <name>hide_server_start</name>
        </proc>
        <proc>
          <name>launch_server</name>
          <summary>Starts the server that the Tk commands will be sent to (launched from client)</summary>
        </proc>
        <proc>
          <name>rexec</name>
          <summary>Executes a command on the Tk server (remote exec)</summary>
        </proc>
        <proc>
          <name>rexec_wait</name>
          <summary>Executes a command on the Tk server (remote exec), and waits for the response/return</summary>
        </proc>
        <proc>
          <name>socket_event</name>
          <summary>This proc is called when a socket event occurs</summary>
        </proc>
        <proc>
          <name>start_client</name>
          <summary>Starts the client that will be sending the Tk commands</summary>
        </proc>
        <proc>
          <name>start_server</name>
          <summary>This command launches the listening service on the server</summary>
        </proc>
        <proc>
          <name>stdin_event</name>
          <summary>This proc is called when a stdin event occurs</summary>
        </proc>
        <proc>
          <name>wait</name>
          <summary>This proc will wait for a specified time</summary>
        </proc>
        <proc>
          <name>wait_for_response</name>
          <summary>Waits for client_return to be set (called by rexec_wait)</summary>
        </proc>
      </procs>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>bf21433f647853bacbf8e2fb16a4805a67037c13</commit_id>
      <name>ultrafast</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <author>Xilinx</author>
      <company>xilinx</company>
      <summary>Scripts for the UltraFast Design Methodology Checklist</summary>
      <procs>
        <proc>
          <name>check_bd_axi_interface</name>
          <summary>Report AXI Interconnect Internal Blocks for Every AXI Master and AXI Slave in an AXI Interconnect instance</summary>
        </proc>
        <proc>
          <name>check_pll_connectivity</name>
          <summary>Report MMCM/PLL information</summary>
        </proc>
        <proc>
          <name>create_cdc_reports</name>
          <summary>Create CDC report for each clock-pair in the design</summary>
        </proc>
        <proc>
          <name>report_clock_topology</name>
          <summary>Generates a Clock Topology Report</summary>
        </proc>
        <proc>
          <name>report_io_reg</name>
          <summary>Report I/O ports information</summary>
        </proc>
        <proc>
          <name>report_reset_signals</name>
          <summary>Generate Report for Control Signals (Reset/Set/Clear/Preset)</summary>
        </proc>
      </procs>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>68bbc30ff320f71cac4751187d36495b7ba7c6d7</commit_id>
      <name>vcs_mx</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <company>xilinx</company>
      <summary>Simulation script to verify design using VCS_MX Simulator</summary>
    </app>
    <app>
      <revision>1.0</revision>
      <commit_id>68bbc30ff320f71cac4751187d36495b7ba7c6d7</commit_id>
      <name>xsim</name>
      <pkg_require>Vivado 2013.1</pkg_require>
      <company>xilinx</company>
      <summary>Simulation script to verify design using Vivado Simulator</summary>
    </app>
  </apps>
</catalog>


Description:

  Export IP generated static, dynamic, netlist, verilog/vhdl stubs, and
  memory initializaton files to the ip_user_files.

Arguments:

  -of_objects <arg> - (Optional) Target object, IP, block design (.bd), or a
  fileset, for which the generated files needs to be exported.

  -ip_user_files_dir <arg> - (Optional) Directory path to IP user files. By
  default, if this switch is not specified then this this command will use
  the path specified with the IP.USER_FILES_DIR project property value.

  -ipstatic_source_dir <arg> - (Optional) Directory path to the static IP
  files. By default, if this switch is not specified then this command will
  use the path specified with the SIM.IPSTATIC_SOURCE_DIR project property
  value.

  Note: If the -ip_user_files_dir switch is specified, then by default the IP
  static files will be exported under the sub-directory with the name
  ipstatic. If this switch is specified in conjunction with
  -ipstatic_source_dir, then the IP static files will be exported in the path
  specified with the -ipstatic_source_dir switch.

  -lib_map_path <arg> - (Optional) Directory path to the pre-compiled
  simulation library.

  -no_script - (Optional) Do not export simulation scripts generated by the
  export_simulation Tcl command. By default, this command will call the
  export_simulation command to generate simulation scripts as well after
  exporting the generated files.

  -sync - (Optional) Delete exported IP/BD sources and simulation scripts
  from the ip_user_files dir.

  -reset - (Optional) Delete all IP/BD generated sources and simulation
  script files from the ip_user_files dir.

  -force - (Optional) Overwrite existing source files in the ip_user_files
  directory with generated IP/BD files.

  -quiet (Optional) Execute the command quietly, ignoring any command line
  errors and returning no messages. The command also returns TCL_OK
  regardless of any errors encountered during execution.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The command export_ip_user_files -of_objects [get_ips char_fifo] exports
  the following:

   *  Dynamic files for the char_fifo IP to
      <project>/<project>.ip_user_files/ip/char_fifo directory

   *  IP static files to <project>/<project>.ip_user_files/ipstatic directory

   *  Simulation script to the
      <project>/<project>.ip_user_files/sim_scripts/char_fifo/<simulator>
      directory

  The following command, will export char_fifo IP static and dynamic files to
  the my_proj/user_files/static and /my_proj/user_files directories:

    export_ip_user_files \
         -of_objects [get_ips char_fifo] \
         -ipstatic_source_dir /my_proj/user_files/static
         -ip_user_files_dir /my_proj/user_files \

  The following command will export char_fifo simulation script files using
  the pre-compiled simulation library from /my_proj/compiled_libs/lib:

    export_ip_user_files \
         -of_objects [get_ips char_fifo] \
         -lib_map_path /my_proj/compiled_libs/lib

  The following command will export files without generating simulation
  scripts for the char_fifo IP:

    export_ip_user_files \
         -of_objects [get_ips char_fifo] \
         -no_script

  The following command will delete generated files and simulation scripts
  for the char_fifo IP:

    export_ip_user_files \
         -of_objects [get_ips char_fifo]\
         -sync

  The following command will delete all generated files and simulation
  scripts for the char_fifo IP:

    export_ip_user_files \
         -of_objects [get_ips char_fifo] \
         -reset

  The following command will overwrite all generated files and simulation
  scripts for the char_fifo:

    export_ip_user_files \
         -of_objects [get_ips char_fifo] \
         -force

See Also:

   *  get_files
   *  get_ips
